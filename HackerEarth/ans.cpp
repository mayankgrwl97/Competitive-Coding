#include <bits/stdc++.h>
#define mp make_pair
#define LL long long
using namespace std;

typedef pair<int,int> pii;

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("input.txt","r",stdin);
		// freopen("output.txt","w",stdout);
	#endif

	int key,lock,n;
	cin>>key>>lock>>n;

	int a[n];

	for(int i=0; i<n; i++)
	{
		cin>>a[i];
	}

	vector<bool> visited(100100,false);

	queue<pii> q;
	q.push(mp(key,0));

	int ans=-1;

	while(!q.empty())
	{
		pii curr = q.front();
		LL currkey = curr.first;
		int dis = curr.second;
		visited[currkey] = true;
		q.pop();
		if(currkey == lock)
		{
			ans = dis;
			break;
		}
		for(int i=0; i<n; i++)
		{
			LL to = (currkey*a[i])%100000;
			if(!visited[to])
				q.push(mp(to,dis+1));
		}
	}
	
	cout<<ans;

	return 0;
}

/*
#include <bits/stdc++.h>
#define LL long long
using namespace std;


int main()
{
	#ifndef ONLINE_JUDGE
		freopen("input.txt","r",stdin);
		// freopen("output.txt","w",stdout);
	#endif

	int key,lock,n;
	cin>>key>>lock>>n;

	vector<int> a(n);

	for(int i=0; i<n; i++)
	{
		cin>>a[i];
	}
	
	vector<int> ans(100100,-1);

	queue<int> myqueue;
	myqueue.push(key);
	ans[key] = 0;

	while(!myqueue.empty())
	{
		LL temp = myqueue.front();
		myqueue.pop();

		if(temp == lock)
			break;
		for(int i=0; i<n; i++)
		{
			LL next = (temp * a[i])%100000;
			if(ans[next] == -1)
			{
				myqueue.push((int)next);
				ans[next] = ans[temp] + 1;
			}
		}
	}

	cout<<ans[lock];

	return 0;
}
*/

/*
18261 13317
720
5271 626 13914 3941 7787 31127 2889 30916 25619 29845 17068 13506 30692 5885 8739 8591 29219 16272 22201 7197 20424 31735 27077 12662 11905 25781 32015 31316 2554 30041 4660 21739 24156 13560 24908 28938 21524 17114 713 25186 22741 7028 28834 11557 18912 10646 8882 212 4995 30694 19035 5458 27103 5773 29038 24124 32495 2352 79 2173 22982 20770 28500 30236 13080 26584 10095 11353 31484 15773 22029 26617 27632 4230 14397 19422 20254 12201 8469 24026 21982 32394 16209 17861 11387 19670 26174 717 10810 22100 24023 2830 17048 32536 32301 2403 7124 8186 6668 11643 28333 30534 31963 16943 4973 4533 32708 32274 24614 16284 31253 16970 15420 27236 4326 15263 3363 24122 10749 6610 24682 23559 1518 20784 30457 1955 17798 6758 5527 1606 24170 9367 16047 24895 17148 11692 14675 232 16766 29932 2433 21465 24186 15308 15781 30300 11873 18696 13664 28193 29298 8690 17800 20019 31965 28170 23920 22315 8233 14544 4457 26532 11731 1494 11912 20718 18488 27417 15274 25607 2996 9617 2998 19142 21260 23559 17698 346 6921 1063 697 1011 18790 7638 29083 1215 23277 14534 4229 15896 15580 30791 29778 13564 21901 2400 13762 32701 86 16158 27771 25849 175 18732 23373 26317 12434 14500 12730 3654 28200 18213 1718 2840 3233 5158 28843 31635 19555 19593 24256 28882 7784 28787 5979 822 14049 11100 32740 2835 13088 29282 4557 20904 22196 23779 8399 20053 9174 27466 22134 17416 21252 12329 1759 21241 28139 3977 17089 21143 4490 2174 19114 1985 7061 15614 18315 2874 18199 11250 27767 29783 31836 20878 26024 7163 22542 8670 14531 3013 11678 4514 31324 28040 2277 8540 31933 3836 29452 7847 23523 19891 32425 4042 2762 32590 24362 32141 17899 10736 3959 3916 3842 8435 19411 11593 5652 23002 25347 7494 13233 3463 8883 19796 22647 31151 25365 16614 5591 22154 30155 21545 9244 21711 31751 18840 2472 14303 26609 21963 18305 24640 11593 7567 12045 23118 25933 23100 17690 17709 27101 6211 22049 9730 11229 17415 8140 31587 18651 30958 13237 9484 9201 18103 30577 29651 1517 24846 26061 30174 2224 27997 30039 21267 20948 25318 18465 19920 24722 12559 2241 15324 29410 8188 6300 2974 17891 8035 29541 10637 13694 30620 27616 23016 32582 4344 9708 23207 11427 17748 29120 25009 26672 28654 27765 19279 16993 12151 2501 3297 10601 3689 27410 16336 6235 1434 10153 22723 16783 3346 27209 24342 14407 12057 2015 14472 23954 20885 29588 23859 5233 10643 13321 1986 313 3364 15841 13790 22584 5994 22401 3305 32667 21234 27155 30447 2191 24132 25553 3033 17319 16057 3968 6884 29822 21901 1338 26706 26781 11061 6257 29536 30111 1267 26417 22647 8851 30887 28325 9126 161 29416 18653 10064 30449 25427 30670 11042 1480 803 24987 1864 17652 27139 25107 32737 8555 25888 5498 29872 7727 17537 16524 14612 7284 4763 31167 10298 28421 27168 30665 18833 15588 24089 10594 6526 30512 10292 31307 19026 26188 4447 27023 4473 4670 18581 21769 21747 2645 7160 7718 19721 20495 18465 3052 28216 26937 20916 3643 12146 23896 7479 18003 134 8776 14628 30871 1244 15395 3644 19345 26213 5221 27167 30773 21714 19533 6170 20330 1284 3718 31808 14534 17604 9222 25788 3737 30389 20535 1381 31534 2694 14420 20883 15181 17772 23062 10289 27140 28368 21905 1556 14760 13637 3672 12939 15894 24508 26600 6712 11326 7931 8516 19486 13027 4939 5084 19706 20636 23153 22963 13527 19231 14816 7873 19165 11198 14637 8599 4970 25906 16579 10049 1124 1688 4312 26224 21453 8121 9376 11737 5271 14990 21952 18904 5562 3588 21509 27993 14213 19964 17750 8696 11057 15510 8679 871 20668 24751 8368 18960 9973 1448 18462 26876 467 26729 30472 17140 31498 13734 31204 15078 20704 15713 59 9098 10045 32689 1626 21060 24322 30401 1867 22861 30620 16923 2819 11534 11993 5927 25821 14540 21242 6894 13895 9866 31497 2340 2491 24107 6509 19558 6642 32728 7355 27584 6484 23969 4815 29042 3506 14439 540 12020 5175 17401 27968 567 8604 13949 13531 46 4764 26386 19362 10381 8360 16307 28847 1745 3803 1630 25627 25728 9008 16758 18895 28850 16371 15207 11927 208 12661 27016 25465 20124 1028 14917 9028 22385 30234 3709 13931 16588 23253 25129 2324 26124 167 26687 26477 29558 28751 7638 21567 12924 6152 6282 11717 
*/